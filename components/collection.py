from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
import logging
from database import Database
from components.states import CollectionStates

db = Database('film_bot.db')

async def show_collection_card(message: types.Message, state: FSMContext):
    """–ü–æ–∫–∞–∑ –∫–∞—Ä—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏"""
    data = await state.get_data()
    cards = data['cards']
    current_index = data['current_index']
    current_rarity = data.get('current_rarity')
    
    if not cards:
        await message.answer("–í–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø—É—Å—Ç–∞")
        await state.clear()
        return

    card = cards[current_index]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–æ—á–∫–µ
    card_info = (
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {card[1]}\n"
        f"–†–µ–¥–∫–æ—Å—Ç—å: {card[4]}\n"
        f"{'üîí –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è' if card[3] else 'üîì –û–±—ã—á–Ω–∞—è'}\n\n"
        f"{current_index + 1}/{len(cards)}"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    keyboard = get_collection_keyboard(current_index, len(cards), current_rarity)

    try:
        await message.edit_media(
            types.InputMediaPhoto(
                media=card[2],
                caption=card_info
            ),
            reply_markup=keyboard
        )
    except Exception as e:
        try:
            await message.answer_photo(
                photo=card[2],
                caption=card_info,
                reply_markup=keyboard
            )
        except Exception as e:
            logging.error(f"Error showing collection card: {e}")

def get_collection_keyboard(current_index: int, total_cards: int, current_rarity: str = None):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data="prev_card"),
            InlineKeyboardButton(text=f"{current_index + 1}/{total_cards}", callback_data="page_info"),
            InlineKeyboardButton(text="‚û°Ô∏è", callback_data="next_card")
        ],
        [
            InlineKeyboardButton(text="üîÑ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞", callback_data="sort_cards")
        ]
    ]
    
    if current_rarity:
        keyboard.append([
            InlineKeyboardButton(text=f"üìä {current_rarity}", callback_data=f"rarity_{current_rarity}")
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_rarity_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏"""
    keyboard = [
        [
            InlineKeyboardButton(text="Base", callback_data="rarity_Base"),
            InlineKeyboardButton(text="Medium", callback_data="rarity_Medium")
        ],
        [
            InlineKeyboardButton(text="Episode", callback_data="rarity_Episode"),
            InlineKeyboardButton(text="Muth", callback_data="rarity_Muth")
        ],
        [
            InlineKeyboardButton(text="Legendary", callback_data="rarity_Legendary"),
            InlineKeyboardButton(text="Limited", callback_data="rarity_Limited")
        ],
        [
            InlineKeyboardButton(text="–í—Å–µ –∫–∞—Ä—Ç—ã", callback_data="rarity_all")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def handle_collection_navigation(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏"""
    try:
        current_state = await state.get_state()
        if current_state != CollectionStates.viewing:
            await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
            return

        data = await state.get_data()
        cards = data['cards']
        current_index = data['current_index']
        
        if callback.data == "prev_card":
            current_index = len(cards) - 1 if current_index == 0 else current_index - 1
        elif callback.data == "next_card":
            current_index = 0 if current_index == len(cards) - 1 else current_index + 1
        elif callback.data == "sort_cards":
            await callback.message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–¥–∫–æ—Å—Ç—å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:",
                reply_markup=get_rarity_keyboard()
            )
            await callback.answer()
            return
        elif callback.data == "page_info":
            await callback.answer()
            return
        
        await state.update_data(current_index=current_index)
        await show_collection_card(callback.message, state)
        await callback.answer()
    except Exception as e:
        logging.error(f"Error in collection navigation: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏") 